// 云端情书数据管理
class CloudLoveManager {
    constructor() {
        this.letters = [];
        this.currentReplyId = null;
        this.isInitialized = false;
    }

    // 初始化云端连接
    async init() {
        if (this.isInitialized) return;
        
        try {
            // 初始化 LeanCloud
            AV.init({
                appId: "tEjNtqzjlbHIexXmLtcr3o1s-gzGzoHsz",
                appKey: "ZTJeor0TAYqmT1Xs4OPfsjLa"
                // serverURL: "..." // 如果需要的话
            });
            
            this.isInitialized = true;
            console.log('云端情书系统初始化成功');
            await this.loadLettersFromCloud();
            return true;
        } catch (error) {
            console.error('云端初始化失败:', error);
            return false;
        }
    }

    // 从云端加载所有情书
    async loadLettersFromCloud() {
        try {
            const query = new AV.Query('LoveLetter');
            query.descending('createdAt');
            const results = await query.find();
            
            this.letters = results.map(item => ({
                id: item.id,
                from: item.get('from'),
                to: item.get('to'),
                content: item.get('content'),
                timestamp: item.get('timestamp'),
                reply: item.get('reply')
            }));
            
            return this.letters;
        } catch (error) {
            console.error('加载情书失败:', error);
            // 如果云端失败，尝试从本地存储恢复
            this.letters = JSON.parse(localStorage.getItem('loveLetters')) || [];
            return this.letters;
        }
    }

    // 保存情书到云端
    async saveLetterToCloud(letter) {
        try {
            const LoveLetter = AV.Object.extend('LoveLetter');
            const cloudLetter = new LoveLetter();
            
            cloudLetter.set('from', letter.from);
            cloudLetter.set('to', letter.to);
            cloudLetter.set('content', letter.content);
            cloudLetter.set('timestamp', letter.timestamp);
            cloudLetter.set('reply', letter.reply);
            
            await cloudLetter.save();
            console.log('情书保存到云端成功');
            return true;
        } catch (error) {
            console.error('保存到云端失败:', error);
            // 云端失败时保存到本地
            this.saveToLocalStorage();
            return false;
        }
    }

    // 更新情书回复到云端
    async updateReplyToCloud(letterId, reply) {
        try {
            const letter = AV.Object.createWithoutData('LoveLetter', letterId);
            letter.set('reply', reply);
            await letter.save();
            console.log('回复保存到云端成功');
            return true;
        } catch (error) {
            console.error('回复保存到云端失败:', error);
            this.saveToLocalStorage();
            return false;
        }
    }

    // 备份到本地存储
    saveToLocalStorage() {
        localStorage.setItem('loveLetters', JSON.stringify(this.letters));
    }

    // 添加情书
    async addLetter(letter) {
        this.letters.unshift(letter);
        
        // 同时保存到云端和本地
        const cloudSuccess = await this.saveLetterToCloud(letter);
        if (!cloudSuccess) {
            this.saveToLocalStorage();
        }
        
        return cloudSuccess;
    }

    // 添加回复
    async addReply(letterId, reply) {
        const letter = this.letters.find(l => l.id === letterId);
        if (letter) {
            letter.reply = reply;
            
            // 更新到云端
            const cloudSuccess = await this.updateReplyToCloud(letterId, reply);
            if (!cloudSuccess) {
                this.saveToLocalStorage();
            }
            
            return cloudSuccess;
        }
        return false;
    }

    // 获取所有情书
    getLetters() {
        return this.letters;
    }
}

// 创建全局实例
const cloudLoveManager = new CloudLoveManager();